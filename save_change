    <script>
        // Création d'un curseur personnalisé
        const cursor = document.createElement('div');
        cursor.id = 'custom-cursor'; // ID pour le curseur
        document.body.appendChild(cursor); // Ajoute le curseur au corps de la page

        // Événement de mouvement de la souris
        document.addEventListener('mousemove', (e) => {
            cursor.style.left = e.clientX + 'px'; // Positionne le curseur horizontalement
            cursor.style.top = e.clientY + 'px'; // Positionne le curseur verticalement

            // Calculer la couleur en fonction de la position de la souris
            const x = e.clientX / window.innerWidth * 255; // Récupère la position X normalisée
            const y = e.clientY / window.innerHeight * 255; // Récupère la position Y normalisée
            const color = `rgb(${Math.round(x)}, ${Math.round(y)}, ${Math.round(255 - x)})`; // Crée une couleur dynamique

            // Changer la couleur du texte des liens en fonction de la souris
            document.querySelectorAll('nav ul li a').forEach(link => {
                link.style.color = color; // Applique la couleur calculée à chaque lien
            });

            // Appliquer la couleur de texte dynamique aux sections
            document.querySelectorAll('h1, h2').forEach(title => {
                title.style.color = color; // Change la couleur des titres
            });

            // Appliquer la position du gradient en fonction de la souris
            const gradientX = e.clientX / window.innerWidth * 100; // Calcule la position du dégradé X
            const gradientY = e.clientY / window.innerHeight * 100; // Calcule la position du dégradé Y
            document.querySelector('header').style.backgroundPosition = `${gradientX}% ${gradientY}%`; // Met à jour la position du dégradé

            // Appliquer la position du gradient en fonction de la souris sur chaque section
            document.querySelectorAll('section').forEach(section => {
                const gradientX = e.clientX / window.innerWidth * 100; // Calcule la position du dégradé X
                const gradientY = e.clientY / window.innerHeight * 100; // Calcule la position du dégradé Y
                section.style.backgroundPosition = `${gradientX}% ${gradientY}%`; // Met à jour la position du dégradé pour chaque section
            });
        });


        // Quand l'utilisateur clique, rétrécir le curseur
        document.addEventListener('mousedown', () => {
            cursor.style.transform = 'scale(0.7)'; // Réduit la taille du curseur
        });

        // Quand l'utilisateur relâche le clic, restaurer la taille d'origine du curseur
        document.addEventListener('mouseup', () => {
            cursor.style.transform = 'scale(1)'; // Restaure la taille originale du curseur
        });
        

        // Fonction pour calculer le mélange des couleurs de fond
        function blendColors(bg1, bg2, ratio) {
            // Ici, on suppose que bg1 et bg2 sont des gradients CSS
            // Si c'est le cas, on peut simplement ajuster l'opacité pour simuler un fondu
            return `linear-gradient(${45 + 35 * ratio}deg, #ff0000, #00ff00, #0000ff)`;
        }
            
    </script>




    header {
    background: linear-gradient(45deg, #ff0000, #00ff00, #0000ff); /* Gradient en diagonale */
    background-size: 300% 300%; /* Taille ajustée pour un effet de mouvement fluide */
    transition: background-position 0.3s ease-out; /* Transition légèrement plus lente pour un effet de défilement plus fluide */
    height: 6vh; /* Le header prend toute la hauteur de la fenêtre */
    display: flex; /* Utilisation de Flexbox pour centrer le contenu */
    align-items: center; /* Centre verticalement les éléments */
    justify-content: center; /* Centre horizontalement */
    text-align: center; /* Texte centré */
    color: #fff; /* Couleur du texte blanche pour contraste */
    font-size: 2rem; /* Taille de texte augmentée */
    position: relative; /* Permet la fusion entre header et accueil */
}

#a-propos, #projets, #contact {
    background: linear-gradient(45deg, #ff0000, #00ff00, #0000ff); /* Gradient aligné avec le curseur */
    background-size: 300% 300%; /* Doit correspondre à l'animation du curseur */
    transition: background-position 0.3s ease; /* Transition pour l'effet visuel */
    height: 100vh; /* Prend toute la hauteur de la fenêtre */
    display: flex; /* Pour centrer le contenu */
    align-items: center; /* Centre verticalement */
    justify-content: center; /* Centre horizontalement */
    text-align: center; /* Centre le texte */
}


// Appliquer la position du gradient en fonction de la souris pour le header
            const gradientX = e.clientX / window.innerWidth * 100; // Calcule la position du dégradé X
            const gradientY = e.clientY / window.innerHeight * 100; // Calcule la position du dégradé Y
            document.querySelector('header').style.backgroundPosition = `${gradientX}% ${gradientY}%`; // Met à jour la position du dégradé


            // Appliquer la position du gradient en fonction de la souris pour le footer
            const gradientfootX = e.clientX / window.innerWidth * 100; // Calcule la position du dégradé X
            const gradientfootY = e.clientY / window.innerHeight * 100; // Calcule la position du dégradé Y
            document.querySelector('footer').style.backgroundPosition = `${gradientfootX}% ${gradientfootY}%`; // Met à jour la position du dégradé

            // Appliquer la position du gradient en fonction de la souris sur chaque section
            document.querySelectorAll('section').forEach(section => {
                const gradientX = e.clientX / window.innerWidth * 100; // Calcule la position du dégradé X
                const gradientY = e.clientY / window.innerHeight * 100; // Calcule la position du dégradé Y
                section.style.backgroundPosition = `${gradientX}% ${gradientY}%`; // Met à jour la position du dégradé pour chaque section
            });
